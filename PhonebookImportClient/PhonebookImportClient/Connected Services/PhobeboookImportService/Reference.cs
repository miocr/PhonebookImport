//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhonebookImportClient.PhobeboookImportService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhonebookRecord", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Wcf")]
    [System.SerializableAttribute()]
    public partial class PhonebookRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublicField;
        
        private int RecordIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysCountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysPhoneYupeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneType {
            get {
                return this.PhoneTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneTypeField, value) != true)) {
                    this.PhoneTypeField = value;
                    this.RaisePropertyChanged("PhoneType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Public {
            get {
                return this.PublicField;
            }
            set {
                if ((this.PublicField.Equals(value) != true)) {
                    this.PublicField = value;
                    this.RaisePropertyChanged("Public");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysCountryId {
            get {
                return this.SysCountryIdField;
            }
            set {
                if ((this.SysCountryIdField.Equals(value) != true)) {
                    this.SysCountryIdField = value;
                    this.RaisePropertyChanged("SysCountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysPhoneYupeId {
            get {
                return this.SysPhoneYupeIdField;
            }
            set {
                if ((this.SysPhoneYupeIdField.Equals(value) != true)) {
                    this.SysPhoneYupeIdField = value;
                    this.RaisePropertyChanged("SysPhoneYupeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Vip {
            get {
                return this.VipField;
            }
            set {
                if ((this.VipField.Equals(value) != true)) {
                    this.VipField = value;
                    this.RaisePropertyChanged("Vip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportRecordResponse", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Business")]
    [System.SerializableAttribute()]
    public partial class ImportRecordResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportRecordResponseError", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Business")]
    [System.SerializableAttribute()]
    public partial class ImportRecordResponseError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ColumnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<PhonebookImportClient.PhobeboookImportService.ImportErrorType> ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RecordIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ColumnId {
            get {
                return this.ColumnIdField;
            }
            set {
                if ((this.ColumnIdField.Equals(value) != true)) {
                    this.ColumnIdField = value;
                    this.RaisePropertyChanged("ColumnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<PhonebookImportClient.PhobeboookImportService.ImportErrorType> ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((this.ErrorTypeField.Equals(value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportErrorType", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Business")]
    public enum ImportErrorType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DuplicateNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportRecordsResponse", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Business")]
    [System.SerializableAttribute()]
    public partial class ImportRecordsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuccessRecordsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuccessRecordsCount {
            get {
                return this.SuccessRecordsCountField;
            }
            set {
                if ((this.SuccessRecordsCountField.Equals(value) != true)) {
                    this.SuccessRecordsCountField = value;
                    this.RaisePropertyChanged("SuccessRecordsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImportRecordsResponseError", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Business")]
    [System.SerializableAttribute()]
    public partial class ImportRecordsResponseError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorRecordsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PhonebookImportClient.PhobeboookImportService.ImportRecordResponseError[] ImportErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuccessRecordsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorRecordsCount {
            get {
                return this.ErrorRecordsCountField;
            }
            set {
                if ((this.ErrorRecordsCountField.Equals(value) != true)) {
                    this.ErrorRecordsCountField = value;
                    this.RaisePropertyChanged("ErrorRecordsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhonebookImportClient.PhobeboookImportService.ImportRecordResponseError[] ImportErrors {
            get {
                return this.ImportErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportErrorsField, value) != true)) {
                    this.ImportErrorsField = value;
                    this.RaisePropertyChanged("ImportErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuccessRecordsCount {
            get {
                return this.SuccessRecordsCountField;
            }
            set {
                if ((this.SuccessRecordsCountField.Equals(value) != true)) {
                    this.SuccessRecordsCountField = value;
                    this.RaisePropertyChanged("SuccessRecordsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhobeboookImportService.IPhonebookImportService")]
    public interface IPhonebookImportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhonebookImportService/GetAppName", ReplyAction="http://tempuri.org/IPhonebookImportService/GetAppNameResponse")]
        string GetAppName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhonebookImportService/GetAppName", ReplyAction="http://tempuri.org/IPhonebookImportService/GetAppNameResponse")]
        System.Threading.Tasks.Task<string> GetAppNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhonebookImportService/ImportContact", ReplyAction="http://tempuri.org/IPhonebookImportService/ImportContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhonebookImportClient.PhobeboookImportService.ImportRecordResponseError), Action="http://tempuri.org/IPhonebookImportService/ImportContactImportRecordResponseError" +
            "Fault", Name="ImportRecordResponseError", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Business")]
        PhonebookImportClient.PhobeboookImportService.ImportRecordResponse ImportContact(PhonebookImportClient.PhobeboookImportService.PhonebookRecord record);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhonebookImportService/ImportContact", ReplyAction="http://tempuri.org/IPhonebookImportService/ImportContactResponse")]
        System.Threading.Tasks.Task<PhonebookImportClient.PhobeboookImportService.ImportRecordResponse> ImportContactAsync(PhonebookImportClient.PhobeboookImportService.PhonebookRecord record);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhonebookImportService/ImportContacts", ReplyAction="http://tempuri.org/IPhonebookImportService/ImportContactsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PhonebookImportClient.PhobeboookImportService.ImportRecordsResponseError), Action="http://tempuri.org/IPhonebookImportService/ImportContactsImportRecordsResponseErr" +
            "orFault", Name="ImportRecordsResponseError", Namespace="http://schemas.datacontract.org/2004/07/PhonebookImportServer.Business")]
        PhonebookImportClient.PhobeboookImportService.ImportRecordsResponse ImportContacts(PhonebookImportClient.PhobeboookImportService.PhonebookRecord[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhonebookImportService/ImportContacts", ReplyAction="http://tempuri.org/IPhonebookImportService/ImportContactsResponse")]
        System.Threading.Tasks.Task<PhonebookImportClient.PhobeboookImportService.ImportRecordsResponse> ImportContactsAsync(PhonebookImportClient.PhobeboookImportService.PhonebookRecord[] records);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhonebookImportServiceChannel : PhonebookImportClient.PhobeboookImportService.IPhonebookImportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhonebookImportServiceClient : System.ServiceModel.ClientBase<PhonebookImportClient.PhobeboookImportService.IPhonebookImportService>, PhonebookImportClient.PhobeboookImportService.IPhonebookImportService {
        
        public PhonebookImportServiceClient() {
        }
        
        public PhonebookImportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhonebookImportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhonebookImportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhonebookImportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetAppName() {
            return base.Channel.GetAppName();
        }
        
        public System.Threading.Tasks.Task<string> GetAppNameAsync() {
            return base.Channel.GetAppNameAsync();
        }
        
        public PhonebookImportClient.PhobeboookImportService.ImportRecordResponse ImportContact(PhonebookImportClient.PhobeboookImportService.PhonebookRecord record) {
            return base.Channel.ImportContact(record);
        }
        
        public System.Threading.Tasks.Task<PhonebookImportClient.PhobeboookImportService.ImportRecordResponse> ImportContactAsync(PhonebookImportClient.PhobeboookImportService.PhonebookRecord record) {
            return base.Channel.ImportContactAsync(record);
        }
        
        public PhonebookImportClient.PhobeboookImportService.ImportRecordsResponse ImportContacts(PhonebookImportClient.PhobeboookImportService.PhonebookRecord[] records) {
            return base.Channel.ImportContacts(records);
        }
        
        public System.Threading.Tasks.Task<PhonebookImportClient.PhobeboookImportService.ImportRecordsResponse> ImportContactsAsync(PhonebookImportClient.PhobeboookImportService.PhonebookRecord[] records) {
            return base.Channel.ImportContactsAsync(records);
        }
    }
}
